# Job to remove credential provider sentinel files from all nodes
# This allows the setup-credential-provider DaemonSet to reconfigure nodes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cleanup-actions
  labels:
    app: cleanup
data:
  remove-sentinel: |
    #!/usr/bin/env bash
    set -xe
    
    # Remove the sentinel file that marks credential provider as configured
    echo "Removing credential provider sentinel file..."
    if [[ -f /opt/credential-provider-configured ]]; then
      rm -f /opt/credential-provider-configured
      echo "Sentinel file removed successfully"
    else
      echo "Sentinel file not found, nothing to remove"
    fi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-credential-provider
  labels:
    app: cleanup-credential-provider
spec:
  completions: 3  # Should match number of nodes
  parallelism: 3
  template:
    metadata:
      labels:
        app: cleanup-credential-provider
    spec:
      hostNetwork: true
      hostPID: true
      restartPolicy: OnFailure
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cleanup-credential-provider
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: alpine:latest
        imagePullPolicy: Always
        name: cleanup
        command: ["/bin/sh"]
        args:
        - -c
        - |
          set -e
          echo "Installing nsenter..."
          apk add --no-cache util-linux bash
          echo "Entering host mount namespace and removing sentinel file..."
          nsenter --mount=/proc/1/ns/mnt -- \
            rm -f /opt/credential-provider-configured
          echo "Sentinel file removed (if it existed)"
        resources:
          requests:
            cpu: 0.1
            memory: 128Mi
          limits:
            cpu: 0.5
            memory: 512Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: actions
          mountPath: "/opt/actions"
        - name: hostmount
          mountPath: "/mnt/actions"
      volumes:
      - name: hostmount
        hostPath:
          path: /opt/actions
          type: DirectoryOrCreate
      - name: actions
        configMap:
          name: cleanup-actions
